// Generated from JC.g4 by ANTLR 4.2
package dhbw.dev.compiler.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JCLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__26=1, T__25=2, T__24=3, T__23=4, T__22=5, T__21=6, T__20=7, T__19=8, 
		T__18=9, T__17=10, T__16=11, T__15=12, T__14=13, T__13=14, T__12=15, T__11=16, 
		T__10=17, T__9=18, T__8=19, T__7=20, T__6=21, T__5=22, T__4=23, T__3=24, 
		T__2=25, T__1=26, T__0=27, IF=28, ELSE=29, DO=30, WHILE=31, CMD=32, BLOCKOPEN=33, 
		BLOCKCLOSE=34, BRACKETOPEN=35, BRACKETCLOSE=36, COMMANDEND=37, INTEGER=38, 
		DOUBLE=39, BOOL=40, STRING=41, COMMENTBLOCK=42, COMMENTLINE=43, WHITESPACE=44, 
		NUMBER=45, IDENTIFIER=46;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'/'", "'main'", "'return'", "'!='", "'||'", "'&&'", "'='", "'^'", "'?'", 
		"'<='", "'[]'", "'$'", "'*'", "','", "'.'", "'>='", "'<'", "'=='", "'%%'", 
		"'>'", "'~'", "'!'", "'#'", "'%'", "'§'", "'+'", "'-'", "'if'", "'else'", 
		"'do'", "'while'", "'cmd'", "'{'", "'}'", "'('", "')'", "';'", "INTEGER", 
		"DOUBLE", "BOOL", "STRING", "COMMENTBLOCK", "COMMENTLINE", "WHITESPACE", 
		"NUMBER", "IDENTIFIER"
	};
	public static final String[] ruleNames = {
		"T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", 
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "IF", "ELSE", "DO", "WHILE", "CMD", "BLOCKOPEN", "BLOCKCLOSE", 
		"BRACKETOPEN", "BRACKETCLOSE", "COMMANDEND", "INTEGER", "DOUBLE", "BOOL", 
		"STRING", "COMMENTBLOCK", "COMMENTLINE", "WHITESPACE", "NUMBER", "IDENTIFIER"
	};


	public JCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JC.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\60\u010d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3"+
		"\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3"+
		"\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3"+
		"\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!"+
		"\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3"+
		")\3)\3)\3)\3)\3)\3)\5)\u00d4\n)\3*\3*\7*\u00d8\n*\f*\16*\u00db\13*\3*"+
		"\3*\3+\3+\3+\3+\7+\u00e3\n+\f+\16+\u00e6\13+\3+\3+\3+\3+\3+\3,\3,\3,\3"+
		",\7,\u00f1\n,\f,\16,\u00f4\13,\3,\5,\u00f7\n,\3,\3,\3,\3,\3-\6-\u00fe"+
		"\n-\r-\16-\u00ff\3-\3-\3.\6.\u0105\n.\r.\16.\u0106\3/\6/\u010a\n/\r/\16"+
		"/\u010b\2\2\60\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16"+
		"\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34"+
		"\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60\3\2\b\4\2$$))\5\2"+
		")),,\61\61\4\2\f\f\17\17\5\2\13\f\17\17\"\"\3\2\62;\5\2\62;C\\c|\u0114"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\3_\3\2\2\2\5a\3"+
		"\2\2\2\7f\3\2\2\2\tm\3\2\2\2\13p\3\2\2\2\rs\3\2\2\2\17v\3\2\2\2\21x\3"+
		"\2\2\2\23z\3\2\2\2\25|\3\2\2\2\27\177\3\2\2\2\31\u0082\3\2\2\2\33\u0084"+
		"\3\2\2\2\35\u0086\3\2\2\2\37\u0088\3\2\2\2!\u008a\3\2\2\2#\u008d\3\2\2"+
		"\2%\u008f\3\2\2\2\'\u0092\3\2\2\2)\u0095\3\2\2\2+\u0097\3\2\2\2-\u0099"+
		"\3\2\2\2/\u009b\3\2\2\2\61\u009d\3\2\2\2\63\u009f\3\2\2\2\65\u00a1\3\2"+
		"\2\2\67\u00a3\3\2\2\29\u00a5\3\2\2\2;\u00a8\3\2\2\2=\u00ad\3\2\2\2?\u00b0"+
		"\3\2\2\2A\u00b6\3\2\2\2C\u00ba\3\2\2\2E\u00bc\3\2\2\2G\u00be\3\2\2\2I"+
		"\u00c0\3\2\2\2K\u00c2\3\2\2\2M\u00c4\3\2\2\2O\u00c6\3\2\2\2Q\u00d3\3\2"+
		"\2\2S\u00d5\3\2\2\2U\u00de\3\2\2\2W\u00ec\3\2\2\2Y\u00fd\3\2\2\2[\u0104"+
		"\3\2\2\2]\u0109\3\2\2\2_`\7\61\2\2`\4\3\2\2\2ab\7o\2\2bc\7c\2\2cd\7k\2"+
		"\2de\7p\2\2e\6\3\2\2\2fg\7t\2\2gh\7g\2\2hi\7v\2\2ij\7w\2\2jk\7t\2\2kl"+
		"\7p\2\2l\b\3\2\2\2mn\7#\2\2no\7?\2\2o\n\3\2\2\2pq\7~\2\2qr\7~\2\2r\f\3"+
		"\2\2\2st\7(\2\2tu\7(\2\2u\16\3\2\2\2vw\7?\2\2w\20\3\2\2\2xy\7`\2\2y\22"+
		"\3\2\2\2z{\7A\2\2{\24\3\2\2\2|}\7>\2\2}~\7?\2\2~\26\3\2\2\2\177\u0080"+
		"\7]\2\2\u0080\u0081\7_\2\2\u0081\30\3\2\2\2\u0082\u0083\7&\2\2\u0083\32"+
		"\3\2\2\2\u0084\u0085\7,\2\2\u0085\34\3\2\2\2\u0086\u0087\7.\2\2\u0087"+
		"\36\3\2\2\2\u0088\u0089\7\60\2\2\u0089 \3\2\2\2\u008a\u008b\7@\2\2\u008b"+
		"\u008c\7?\2\2\u008c\"\3\2\2\2\u008d\u008e\7>\2\2\u008e$\3\2\2\2\u008f"+
		"\u0090\7?\2\2\u0090\u0091\7?\2\2\u0091&\3\2\2\2\u0092\u0093\7\'\2\2\u0093"+
		"\u0094\7\'\2\2\u0094(\3\2\2\2\u0095\u0096\7@\2\2\u0096*\3\2\2\2\u0097"+
		"\u0098\7\u0080\2\2\u0098,\3\2\2\2\u0099\u009a\7#\2\2\u009a.\3\2\2\2\u009b"+
		"\u009c\7%\2\2\u009c\60\3\2\2\2\u009d\u009e\7\'\2\2\u009e\62\3\2\2\2\u009f"+
		"\u00a0\7\u00a9\2\2\u00a0\64\3\2\2\2\u00a1\u00a2\7-\2\2\u00a2\66\3\2\2"+
		"\2\u00a3\u00a4\7/\2\2\u00a48\3\2\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7"+
		"h\2\2\u00a7:\3\2\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7n\2\2\u00aa\u00ab"+
		"\7u\2\2\u00ab\u00ac\7g\2\2\u00ac<\3\2\2\2\u00ad\u00ae\7f\2\2\u00ae\u00af"+
		"\7q\2\2\u00af>\3\2\2\2\u00b0\u00b1\7y\2\2\u00b1\u00b2\7j\2\2\u00b2\u00b3"+
		"\7k\2\2\u00b3\u00b4\7n\2\2\u00b4\u00b5\7g\2\2\u00b5@\3\2\2\2\u00b6\u00b7"+
		"\7e\2\2\u00b7\u00b8\7o\2\2\u00b8\u00b9\7f\2\2\u00b9B\3\2\2\2\u00ba\u00bb"+
		"\7}\2\2\u00bbD\3\2\2\2\u00bc\u00bd\7\177\2\2\u00bdF\3\2\2\2\u00be\u00bf"+
		"\7*\2\2\u00bfH\3\2\2\2\u00c0\u00c1\7+\2\2\u00c1J\3\2\2\2\u00c2\u00c3\7"+
		"=\2\2\u00c3L\3\2\2\2\u00c4\u00c5\5[.\2\u00c5N\3\2\2\2\u00c6\u00c7\5[."+
		"\2\u00c7\u00c8\7\60\2\2\u00c8\u00c9\5[.\2\u00c9P\3\2\2\2\u00ca\u00cb\7"+
		"v\2\2\u00cb\u00cc\7t\2\2\u00cc\u00cd\7w\2\2\u00cd\u00d4\7g\2\2\u00ce\u00cf"+
		"\7h\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7u\2\2\u00d2"+
		"\u00d4\7g\2\2\u00d3\u00ca\3\2\2\2\u00d3\u00ce\3\2\2\2\u00d4R\3\2\2\2\u00d5"+
		"\u00d9\7$\2\2\u00d6\u00d8\n\2\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00db\3\2"+
		"\2\2\u00d9\u00d7\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00dc\3\2\2\2\u00db"+
		"\u00d9\3\2\2\2\u00dc\u00dd\7$\2\2\u00ddT\3\2\2\2\u00de\u00df\7\61\2\2"+
		"\u00df\u00e0\7,\2\2\u00e0\u00e4\3\2\2\2\u00e1\u00e3\n\3\2\2\u00e2\u00e1"+
		"\3\2\2\2\u00e3\u00e6\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5"+
		"\u00e7\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e7\u00e8\7,\2\2\u00e8\u00e9\7\61"+
		"\2\2\u00e9\u00ea\3\2\2\2\u00ea\u00eb\b+\2\2\u00ebV\3\2\2\2\u00ec\u00ed"+
		"\7\61\2\2\u00ed\u00ee\7\61\2\2\u00ee\u00f2\3\2\2\2\u00ef\u00f1\n\4\2\2"+
		"\u00f0\u00ef\3\2\2\2\u00f1\u00f4\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f2\u00f3"+
		"\3\2\2\2\u00f3\u00f6\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f5\u00f7\7\17\2\2"+
		"\u00f6\u00f5\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00f9"+
		"\7\f\2\2\u00f9\u00fa\3\2\2\2\u00fa\u00fb\b,\2\2\u00fbX\3\2\2\2\u00fc\u00fe"+
		"\t\5\2\2\u00fd\u00fc\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\u00fd\3\2\2\2\u00ff"+
		"\u0100\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u0102\b-\2\2\u0102Z\3\2\2\2\u0103"+
		"\u0105\t\6\2\2\u0104\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0104\3\2"+
		"\2\2\u0106\u0107\3\2\2\2\u0107\\\3\2\2\2\u0108\u010a\t\7\2\2\u0109\u0108"+
		"\3\2\2\2\u010a\u010b\3\2\2\2\u010b\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010c"+
		"^\3\2\2\2\13\2\u00d3\u00d9\u00e4\u00f2\u00f6\u00ff\u0106\u010b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}